
---

- name: "Apt Install ca-cartificates and apt-transport-https"
  become: true
  apt: update_cache=yes name={{ item }} state=present force=yes #apt-get update
  with_items:
    - apt-transport-https
    - ca-certificates
  register: lib_install_status
  any_errors_fatal: true
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_version == "14.04")
- debug: var=lib_install_status

- name: "Apt: add new gpg key."
  become: true
  apt_key: keyserver=hkp://p80.pool.sks-keyservers.net:80 id=58118E89F3A912897C070ADBF76221572C52609D state=present
  register: gpg_key_status
  any_errors_fatal: true
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_version == "14.04")
- debug: var=gpg_key_status

- name: "Create file docker.list"
  become: true
  copy:
    content: deb https://apt.dockerproject.org/repo ubuntu-trusty main
    dest: /etc/apt/sources.list.d/docker.list
    force: yes
    owner: root
    mode: 0644
  register: file_creation_status
  any_errors_fatal: true
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_version == "14.04")
- debug: var=file_creation_status

- name: "Apt Install linux-image-extra."
  become: true
  shell: apt-get update && apt-get install -y linux-image-extra-$(uname -r)
  register: linux_image_extra_install_status
  any_errors_fatal: true
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_version == "14.04")
- debug: var=linux_image_extra_install_status

- name: "Apt Install docker-engine."
  become: true
  apt: update_cache=yes name={{ item }} state=present force=yes #apt-get update
  with_items:
    - docker-engine
  register: docker_install_status
  any_errors_fatal: true
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_version == "14.04")
- debug: var=docker_install_status
